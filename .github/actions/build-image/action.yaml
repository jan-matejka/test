name: Build and push container image
description: with layer caching
inputs:
  image:
    required: true
    description: image name to build with podman-compose
  repository:
    description: git repository name
    default: test
  registry:
    description: registry
    default: ghcr.io/${{ github.repository_owner }}
  registry_user:
    description: registry user
    default: ${{ github.actor }}
  registry_pass:
    description: registry password
    required: true
  base:
    # TBD: load this automatically from the containerfile
    description: base image
    required: false
    default: ''
  base_tag:
    description: base image tag
    required: true
  branch_tag:
    description: branch tag
    required: true

runs:
  using: "composite"
  steps:
    - name: Install podman-compose
      run: pip3 install podman-compose
      shell: sh
      # Ubuntu also uses too old (1.0.6) version
      #  run: sudo apt-get install -y podman-compose

    - name: Log in to the Github Container registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_user }}
        password: ${{ inputs.registry_pass }}

    - name: Pull base image
      if: inputs.base != ''
      env:
        BASE: >-
          ${{ inputs.registry }}/${{ inputs.repository }}_${{ inputs.base }}:${{ inputs.base_tag }}
      run: >
        podman pull ${{ env.BASE }}
      shell: sh

    - name: Build image
      env:
        IMAGE_FULL: >-
          ${{ inputs.repository }}_${{ inputs.image }}
        CACHE: >-
          ${{ inputs.registry }}/${{ inputs.repository }}_${{ inputs.image }}
      run: >
        set -x &&
        podman-compose
        -p ${{ inputs.repository }}
        --podman-build-args "
        -t ${{ env.IMAGE_FULL }}:${{ github.sha }}
        -t ${{ env.IMAGE_FULL }}:${{ inputs.branch_tag }}
        --cache-from=${{ env.CACHE }}
        --cache-to=${{ env.CACHE }}"
        build --build-arg tag=${{ inputs.base_tag }}
        --build-arg registry=${{ inputs.registry }}
        "${{ inputs.image }}"
      shell: sh

    - name: Push image
      id: push
      uses: redhat-actions/push-to-registry@v2
      env:
        IMAGE_FULL: >
          ${{ inputs.repository }}_${{ inputs.image }}
      with:
        image: ${{ env.IMAGE_FULL }}
        tags: ${{ github.sha }} ${{ inputs.branch_tag }}
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_user }}
        password: ${{ inputs.registry_pass }}

    - name: Print image url
      run: >
        printf "Image pushed to %s\n"
        "${{ steps.push.outputs.registry-paths }}"
      shell: sh
